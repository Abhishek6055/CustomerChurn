{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364149417_1747974744","id":"20200605-133549_292815155","dateCreated":"2020-06-05T13:35:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9412","text":"%pyspark\nspark","dateUpdated":"2020-06-05T13:35:56+0000","dateFinished":"2020-06-05T13:35:56+0000","dateStarted":"2020-06-05T13:35:56+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.session.SparkSession object at 0x7f6ecddddf50>\n"}]}},{"text":"%pyspark\ndf = spark.read.csv('s3://sparklesson/customer_churn.csv',inferSchema = True , header = True)","user":"anonymous","dateUpdated":"2020-06-05T13:36:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364156370_-738353140","id":"20200605-133556_1644035380","dateCreated":"2020-06-05T13:35:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9489","dateFinished":"2020-06-05T13:36:25+0000","dateStarted":"2020-06-05T13:36:23+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\ndf.show()","user":"anonymous","dateUpdated":"2020-06-05T13:36:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364183974_1405535842","id":"20200605-133623_362180939","dateCreated":"2020-06-05T13:36:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9581","dateFinished":"2020-06-05T13:36:37+0000","dateStarted":"2020-06-05T13:36:37+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+----+--------------+---------------+-----+---------+-------------------+--------------------+--------------------+-----+\n|              Names| Age|Total_Purchase|Account_Manager|Years|Num_Sites|       Onboard_date|            Location|             Company|Churn|\n+-------------------+----+--------------+---------------+-----+---------+-------------------+--------------------+--------------------+-----+\n|   Cameron Williams|42.0|       11066.8|              0| 7.22|      8.0|2013-08-30 07:00:40|10265 Elizabeth M...|          Harvey LLC|    1|\n|      Kevin Mueller|41.0|      11916.22|              0|  6.5|     11.0|2013-08-13 00:38:46|6157 Frank Garden...|          Wilson PLC|    1|\n|        Eric Lozano|38.0|      12884.75|              0| 6.67|     12.0|2016-06-29 06:20:07|1331 Keith Court ...|Miller, Johnson a...|    1|\n|      Phillip White|42.0|       8010.76|              0| 6.71|     10.0|2014-04-22 12:43:12|13120 Daniel Moun...|           Smith Inc|    1|\n|     Cynthia Norton|37.0|       9191.58|              0| 5.56|      9.0|2016-01-19 15:31:15|765 Tricia Row Ka...|          Love-Jones|    1|\n|   Jessica Williams|48.0|      10356.02|              0| 5.12|      8.0|2009-03-03 23:13:37|6187 Olson Mounta...|        Kelly-Warren|    1|\n|        Eric Butler|44.0|      11331.58|              1| 5.23|     11.0|2016-12-05 03:35:43|4846 Savannah Roa...|   Reynolds-Sheppard|    1|\n|      Zachary Walsh|32.0|       9885.12|              1| 6.92|      9.0|2006-03-09 14:50:20|25271 Roy Express...|          Singh-Cole|    1|\n|        Ashlee Carr|43.0|       14062.6|              1| 5.46|     11.0|2011-09-29 05:47:23|3725 Caroline Str...|           Lopez PLC|    1|\n|     Jennifer Lynch|40.0|       8066.94|              1| 7.11|     11.0|2006-03-28 15:42:45|363 Sandra Lodge ...|       Reed-Martinez|    1|\n|       Paula Harris|30.0|      11575.37|              1| 5.22|      8.0|2016-11-13 13:13:01|Unit 8120 Box 916...|Briggs, Lamb and ...|    1|\n|     Bruce Phillips|45.0|       8771.02|              1| 6.64|     11.0|2015-05-28 12:14:03|Unit 1895 Box 094...|    Figueroa-Maynard|    1|\n|       Craig Garner|45.0|       8988.67|              1| 4.84|     11.0|2011-02-16 08:10:47|897 Kelley Overpa...|     Abbott-Thompson|    1|\n|       Nicole Olson|40.0|       8283.32|              1|  5.1|     13.0|2012-11-22 05:35:03|11488 Weaver Cape...|Smith, Kim and Ma...|    1|\n|     Harold Griffin|41.0|       6569.87|              1|  4.3|     11.0|2015-03-28 02:13:44|1774 Peter Row Ap...|Snyder, Lee and M...|    1|\n|       James Wright|38.0|      10494.82|              1| 6.81|     12.0|2015-07-22 08:38:40|45408 David Path ...|      Sanders-Pierce|    1|\n|      Doris Wilkins|45.0|       8213.41|              1| 7.35|     11.0|2006-09-03 06:13:55|28216 Wright Moun...|Andrews, Adams an...|    1|\n|Katherine Carpenter|43.0|      11226.88|              0| 8.08|     12.0|2006-10-22 04:42:38|Unit 4948 Box 481...|Morgan, Phillips ...|    1|\n|     Lindsay Martin|53.0|       5515.09|              0| 6.85|      8.0|2015-10-07 00:27:10|69203 Crosby Divi...|      Villanueva LLC|    1|\n|        Kathy Curry|46.0|        8046.4|              1| 5.69|      8.0|2014-11-06 23:47:14|9569 Caldwell Cre...|Berry, Orr and Ca...|    1|\n+-------------------+----+--------------+---------------+-----+---------+-------------------+--------------------+--------------------+-----+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\ndf.columns","user":"anonymous","dateUpdated":"2020-06-05T13:37:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364197254_-479307909","id":"20200605-133637_1041049095","dateCreated":"2020-06-05T13:36:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9664","dateFinished":"2020-06-05T13:37:25+0000","dateStarted":"2020-06-05T13:37:25+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Names', 'Age', 'Total_Purchase', 'Account_Manager', 'Years', 'Num_Sites', 'Onboard_date', 'Location', 'Company', 'Churn']\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-06-05T13:39:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364389251_1297654187","id":"20200605-133949_438800531","dateCreated":"2020-06-05T13:39:49+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10012"},{"text":"%pyspark\ndf.printSchema()","user":"anonymous","dateUpdated":"2020-06-05T13:37:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364245502_775229177","id":"20200605-133725_1293792046","dateCreated":"2020-06-05T13:37:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9764","dateFinished":"2020-06-05T13:37:39+0000","dateStarted":"2020-06-05T13:37:39+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Names: string (nullable = true)\n |-- Age: double (nullable = true)\n |-- Total_Purchase: double (nullable = true)\n |-- Account_Manager: integer (nullable = true)\n |-- Years: double (nullable = true)\n |-- Num_Sites: double (nullable = true)\n |-- Onboard_date: timestamp (nullable = true)\n |-- Location: string (nullable = true)\n |-- Company: string (nullable = true)\n |-- Churn: integer (nullable = true)\n\n"}]}},{"text":"%pyspark\nfrom pyspark.ml.feature import VectorAssembler","user":"anonymous","dateUpdated":"2020-06-05T13:38:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364259070_385780567","id":"20200605-133739_294598213","dateCreated":"2020-06-05T13:37:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9852","dateFinished":"2020-06-05T13:38:49+0000","dateStarted":"2020-06-05T13:38:49+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nassembler = VectorAssembler(inputCols = ['Age', 'Total_Purchase', 'Account_Manager', 'Years', 'Num_Sites'],outputCol = 'features')","user":"anonymous","dateUpdated":"2020-06-05T13:40:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364329191_-1943689920","id":"20200605-133849_1126851005","dateCreated":"2020-06-05T13:38:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9940","dateFinished":"2020-06-05T13:40:29+0000","dateStarted":"2020-06-05T13:40:29+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\noutput = assembler.transform(df)","user":"anonymous","dateUpdated":"2020-06-05T13:41:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364429343_-1954616822","id":"20200605-134029_1408595864","dateCreated":"2020-06-05T13:40:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10084","dateFinished":"2020-06-05T13:41:12+0000","dateStarted":"2020-06-05T13:41:12+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfinal_data = output.select('features','Churn')","user":"anonymous","dateUpdated":"2020-06-05T13:45:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364467059_-1221225311","id":"20200605-134107_259192082","dateCreated":"2020-06-05T13:41:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10156","dateFinished":"2020-06-05T13:45:24+0000","dateStarted":"2020-06-05T13:45:24+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\ntrain_churn,test_churn = final_data.randomSplit([0.7,0.3])","user":"anonymous","dateUpdated":"2020-06-05T13:45:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364528055_1855893718","id":"20200605-134208_1474518186","dateCreated":"2020-06-05T13:42:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10244","dateFinished":"2020-06-05T13:45:25+0000","dateStarted":"2020-06-05T13:45:25+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfrom pyspark.ml.classification import LogisticRegression","user":"anonymous","dateUpdated":"2020-06-05T13:45:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364553407_-370981023","id":"20200605-134233_739600526","dateCreated":"2020-06-05T13:42:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10316","dateFinished":"2020-06-05T13:45:27+0000","dateStarted":"2020-06-05T13:45:27+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nlr_churn = LogisticRegression(labelCol ='Churn')","user":"anonymous","dateUpdated":"2020-06-05T13:45:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364581543_-1920506003","id":"20200605-134301_504113326","dateCreated":"2020-06-05T13:43:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10388","dateFinished":"2020-06-05T13:45:30+0000","dateStarted":"2020-06-05T13:45:30+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfitted_churn = lr_churn.fit(train_churn)","user":"anonymous","dateUpdated":"2020-06-05T13:45:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364622131_2054400759","id":"20200605-134342_763577185","dateCreated":"2020-06-05T13:43:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10476","dateFinished":"2020-06-05T13:45:48+0000","dateStarted":"2020-06-05T13:45:36+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfrom pyspark.ml.evaluation import BinaryClassificationEvaluator","user":"anonymous","dateUpdated":"2020-06-05T13:46:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364651995_-1785550057","id":"20200605-134411_136938746","dateCreated":"2020-06-05T13:44:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10564","dateFinished":"2020-06-05T13:46:41+0000","dateStarted":"2020-06-05T13:46:41+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\npred_and_labels = fitted_churn.evaluate(test_churn)","user":"anonymous","dateUpdated":"2020-06-05T13:47:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364789127_-2096309443","id":"20200605-134629_1118542253","dateCreated":"2020-06-05T13:46:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10679","dateFinished":"2020-06-05T13:47:43+0000","dateStarted":"2020-06-05T13:47:43+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nchurn_eval = BinaryClassificationEvaluator(rawPredictionCol ='prediction',labelCol='churn')","user":"anonymous","dateUpdated":"2020-06-05T13:50:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364830907_-1783307240","id":"20200605-134710_2038405082","dateCreated":"2020-06-05T13:47:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10767","dateFinished":"2020-06-05T13:50:40+0000","dateStarted":"2020-06-05T13:50:40+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nauc = churn.eval.evaluate(pred_and_labels.predictions)","user":"anonymous","dateUpdated":"2020-06-05T13:49:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364946269_-948636049","id":"20200605-134906_1643064382","dateCreated":"2020-06-05T13:49:06+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10880","dateFinished":"2020-06-05T13:49:39+0000","dateStarted":"2020-06-05T13:49:39+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 1: auc = churn.eval.evaluate(pred_and_labels.predictions)\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-1646614757882300654.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'churn' is not defined\n"}]}},{"text":"%pyspark\n###","user":"anonymous","dateUpdated":"2020-06-05T13:51:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591364979311_1862781990","id":"20200605-134939_351150584","dateCreated":"2020-06-05T13:49:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10968","dateFinished":"2020-06-05T13:51:16+0000","dateStarted":"2020-06-05T13:51:16+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nfinal_lr_model = lr_churn.fit(final_data)","user":"anonymous","dateUpdated":"2020-06-05T13:51:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591365076555_1507427326","id":"20200605-135116_215269230","dateCreated":"2020-06-05T13:51:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11056","dateFinished":"2020-06-05T13:51:53+0000","dateStarted":"2020-06-05T13:51:51+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nnew = spark.read.csv('s3://sparklesson/new_customers.csv',inferSchema = True ,header =True)","user":"anonymous","dateUpdated":"2020-06-05T13:52:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591365111423_875435144","id":"20200605-135151_904487336","dateCreated":"2020-06-05T13:51:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11128","dateFinished":"2020-06-05T13:52:52+0000","dateStarted":"2020-06-05T13:52:51+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\ntest_new = assembler.transform(new)","user":"anonymous","dateUpdated":"2020-06-05T13:53:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591365163035_-148247930","id":"20200605-135243_301281132","dateCreated":"2020-06-05T13:52:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11211","dateFinished":"2020-06-05T13:53:14+0000","dateStarted":"2020-06-05T13:53:14+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nresults = final_lr_model.transform(test_new)","user":"anonymous","dateUpdated":"2020-06-05T13:53:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591365194427_-1042545396","id":"20200605-135314_476536433","dateCreated":"2020-06-05T13:53:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11310","dateFinished":"2020-06-05T13:53:48+0000","dateStarted":"2020-06-05T13:53:48+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\nresults.select('Company','predictions').show()","user":"anonymous","dateUpdated":"2020-06-05T13:54:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591365228159_-1925792381","id":"20200605-135348_1207789486","dateCreated":"2020-06-05T13:53:48+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11382","dateFinished":"2020-06-05T13:54:53+0000","dateStarted":"2020-06-05T13:54:53+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 1: results.select('Company','predictions').show()\nTraceback (most recent call last):\n  File \"/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 63, in deco\n    return f(*a, **kw)\n  File \"/usr/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/protocol.py\", line 328, in get_return_value\n    format(target_id, \".\", name), value)\npy4j.protocol.Py4JJavaError: An error occurred while calling o3273.select.\n: org.apache.spark.sql.AnalysisException: cannot resolve '`predictions`' given input columns: [Years, rawPrediction, Account_Manager, Names, features, Age, Location, Total_Purchase, Num_Sites, Company, probability, Onboard_date, prediction];;\n'Project [Company#5135, 'predictions]\n+- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, features#5146, rawPrediction#5157, probability#5169, UDF(rawPrediction#5157) AS prediction#5182]\n   +- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, features#5146, rawPrediction#5157, UDF(rawPrediction#5157) AS probability#5169]\n      +- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, features#5146, UDF(features#5146) AS rawPrediction#5157]\n         +- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, UDF(named_struct(Age, Age#5128, Total_Purchase, Total_Purchase#5129, Account_Manager_double_VectorAssembler_de226ed45278, cast(Account_Manager#5130 as double), Years, Years#5131, Num_Sites, Num_Sites#5132)) AS features#5146]\n            +- Relation[Names#5127,Age#5128,Total_Purchase#5129,Account_Manager#5130,Years#5131,Num_Sites#5132,Onboard_date#5133,Location#5134,Company#5135] csv\n\n\tat org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:111)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$3.applyOrElse(CheckAnalysis.scala:108)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:310)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:310)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:71)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:309)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$1.apply(QueryPlan.scala:105)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:71)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:104)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:116)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$2.apply(QueryPlan.scala:121)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\n\tat scala.collection.AbstractTraversable.map(Traversable.scala:104)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:121)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$2.apply(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:213)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:126)\n\tat org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:93)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:108)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:86)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:153)\n\tat org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:86)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:112)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:128)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:125)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\n\tat org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:125)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:76)\n\tat org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:74)\n\tat org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:66)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:79)\n\tat org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:3418)\n\tat org.apache.spark.sql.Dataset.select(Dataset.scala:1342)\n\tat sun.reflect.GeneratedMethodAccessor364.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-1646614757882300654.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/dataframe.py\", line 1326, in select\n    jdf = self._jdf.select(self._jcols(*cols))\n  File \"/usr/lib/spark/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py\", line 1257, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 69, in deco\n    raise AnalysisException(s.split(': ', 1)[1], stackTrace)\npyspark.sql.utils.AnalysisException: \"cannot resolve '`predictions`' given input columns: [Years, rawPrediction, Account_Manager, Names, features, Age, Location, Total_Purchase, Num_Sites, Company, probability, Onboard_date, prediction];;\\n'Project [Company#5135, 'predictions]\\n+- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, features#5146, rawPrediction#5157, probability#5169, UDF(rawPrediction#5157) AS prediction#5182]\\n   +- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, features#5146, rawPrediction#5157, UDF(rawPrediction#5157) AS probability#5169]\\n      +- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, features#5146, UDF(features#5146) AS rawPrediction#5157]\\n         +- Project [Names#5127, Age#5128, Total_Purchase#5129, Account_Manager#5130, Years#5131, Num_Sites#5132, Onboard_date#5133, Location#5134, Company#5135, UDF(named_struct(Age, Age#5128, Total_Purchase, Total_Purchase#5129, Account_Manager_double_VectorAssembler_de226ed45278, cast(Account_Manager#5130 as double), Years, Years#5131, Num_Sites, Num_Sites#5132)) AS features#5146]\\n            +- Relation[Names#5127,Age#5128,Total_Purchase#5129,Account_Manager#5130,Years#5131,Num_Sites#5132,Onboard_date#5133,Location#5134,Company#5135] csv\\n\"\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-06-05T13:54:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1591365293383_-1852515791","id":"20200605-135453_1521422432","dateCreated":"2020-06-05T13:54:53+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11454"}],"name":"Customer Churn Logistic Regression","id":"2FBSNYRZS","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}